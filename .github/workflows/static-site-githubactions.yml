#name: Terraform CI/CD
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  terraform:
#    name: 'Terraform workflow'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v3
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.5.6  # Change if needed
#
#      - name: Terraform Format Check
#        run: terraform fmt -check
#
#      - name: Terraform Init
#        run: terraform init
#
#      - name: Terraform Validate
#        run: terraform validate
#
#      - name: Terraform Plan
#        run: terraform plan -out=tfplan.binary
#
#      - name: Upload Terraform plan artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: tfplan
#          path: tfplan.binary
#
#      - name: Terraform Apply
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        run: terraform apply -auto-approve

#name: Terraform CI/CD
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  terraform:
#    name: 'Terraform workflow'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v3
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.5.6  # Change if needed
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.NEW_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.NEW_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1  # Update region if needed
#
#      - name: Terraform Format Check
#        run: terraform fmt -check
#        working-directory: envs/dev
#
#      - name: Terraform Init
#        run: terraform init
#        working-directory: envs/dev
#
#      - name: Terraform Validate
#        run: terraform validate
#        working-directory: envs/dev
#
#      - name: Terraform Plan
#        run: terraform plan -out=tfplan.binary
#        working-directory: envs/dev
#
#      - name: Upload Terraform plan artifact
#        uses: actions/upload-artifact@main
#        with:
#          name: tfplan
#          path: envs/dev/tfplan.binary
#
#      - name: Terraform Apply
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        run: terraform apply -auto-approve tfplan.binary
#        working-directory: envs/dev
#

#
#name: Terraform CI/CD
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  terraform:
#    name: 'Terraform workflow'
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v3
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.5.6  # Change if needed
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.NEW_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.NEW_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1  # Update region if needed
#
#      - name: Terraform Format Check
#        run: terraform fmt -check
#        working-directory: envs/dev
#
#      - name: Terraform Init
#        run: terraform init
#        working-directory: envs/dev
#
#      - name: Terraform Validate
#        run: terraform validate
#        working-directory: envs/dev
#
#      - name: Terraform Plan
#        run: terraform plan -out=tfplan.binary -var-file=terraform.tfvars -lock=false
#        working-directory: envs/dev
#
#      - name: Upload Terraform plan artifact
#        uses: actions/upload-artifact@main
#        with:
#          name: tfplan
#          path: envs/dev/tfplan.binary
#
#      - name: Terraform Apply
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        run: terraform apply -auto-approve -lock=false tfplan.binary 
#        working-directory: envs/dev


name: Terraform CI/CD

on: [push, pull_request]
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  terraform:
    name: 'Terraform workflow'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.NEW_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.NEW_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Scan Terraform config with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ./envs/dev
          severity: CRITICAL,HIGH,MEDIUM,LOW
#          exit-code: 0
          exit-code: 1
          format: table

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: envs/dev

      - name: Terraform Init
        run: terraform init
        working-directory: envs/dev

      - name: Terraform Validate
        run: terraform validate
        working-directory: envs/dev

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary -var-file=terraform.tfvars -lock=false
        working-directory: envs/dev

      - name: Upload Terraform plan artifact
        uses: actions/upload-artifact@main
        with:
          name: tfplan
          path: envs/dev/tfplan.binary

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -lock=false tfplan.binary
        working-directory: envs/dev
